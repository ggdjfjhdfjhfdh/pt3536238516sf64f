#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Ejemplo de uso de la funcionalidad WhatWeb integrada.
Demuestra c√≥mo usar el detector de tecnolog√≠as mejorado con WhatWeb.
"""

import sys
import os

# A√±adir el directorio padre al path para importaciones
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from enhanced_fingerprint import EnhancedTechDetector
import logging
import json

# Configurar logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
log = logging.getLogger(__name__)

def demo_whatweb_detection():
    """Demuestra la detecci√≥n de tecnolog√≠as con WhatWeb integrado."""
    print("=== Demo: Detecci√≥n de Tecnolog√≠as con WhatWeb ===")
    print("Este ejemplo muestra c√≥mo WhatWeb est√° integrado en el sistema de detecci√≥n.\n")
    
    # Crear detector con todas las herramientas habilitadas
    detector = EnhancedTechDetector(use_cache=True, enable_web_content_analysis=True)
    
    # URLs de ejemplo para probar
    test_urls = [
        "https://httpbin.org/",
        "https://github.com/",
        "https://stackoverflow.com/"
    ]
    
    for url in test_urls:
        print(f"\n{'='*60}")
        print(f"Analizando: {url}")
        print(f"{'='*60}")
        
        try:
            # Ejecutar detecci√≥n completa (incluye WhatWeb)
            results = detector.detect_technologies(url, timeout=30)
            
            print(f"\nüìä Resumen de detecci√≥n:")
            print(f"   ‚Ä¢ URL: {results['url']}")
            print(f"   ‚Ä¢ Tecnolog√≠as detectadas: {len(results['technologies'])}")
            print(f"   ‚Ä¢ M√©todos usados: {', '.join(results['detection_methods'])}")
            print(f"   ‚Ä¢ Tiempo de detecci√≥n: {results['detection_time']}s")
            
            if results['technologies']:
                print(f"\nüîç Tecnolog√≠as detectadas:")
                
                # Agrupar por fuente de detecci√≥n
                by_source = {}
                for tech in results['technologies']:
                    source = tech.get('source', 'unknown')
                    if source not in by_source:
                        by_source[source] = []
                    by_source[source].append(tech)
                
                for source, techs in by_source.items():
                    print(f"\n   üìã Detectadas por {source.upper()}:")
                    for tech in techs:
                        version_info = f" v{tech['version']}" if tech.get('version') else ""
                        confidence = tech.get('confidence', 'N/A')
                        print(f"      ‚Ä¢ {tech['name']}{version_info} (confianza: {confidence}%)")
                
                # Mostrar scores de confianza consolidados
                if results['confidence_scores']:
                    print(f"\nüìà Scores de confianza consolidados:")
                    sorted_scores = sorted(results['confidence_scores'].items(), 
                                         key=lambda x: x[1], reverse=True)
                    for tech_name, score in sorted_scores[:10]:  # Top 10
                        print(f"      ‚Ä¢ {tech_name.title()}: {score:.1f}%")
            else:
                print("\n‚ùå No se detectaron tecnolog√≠as")
                
        except Exception as e:
            print(f"\n‚ùå Error al analizar {url}: {e}")
            log.error(f"Error en detecci√≥n para {url}: {e}")
    
    print(f"\n\n{'='*60}")
    print("Demo completado. WhatWeb est√° funcionando correctamente integrado.")
    print(f"{'='*60}")

def demo_whatweb_only():
    """Demuestra solo la funcionalidad de WhatWeb."""
    print("\n=== Demo: Solo WhatWeb ===")
    print("Este ejemplo muestra √∫nicamente la detecci√≥n con WhatWeb.\n")
    
    detector = EnhancedTechDetector()
    
    test_url = "https://github.com/"
    print(f"Probando WhatWeb en: {test_url}")
    
    try:
        # Usar solo WhatWeb
        result = detector._check_whatweb(test_url)
        
        if result and result.get('technologies'):
            print(f"\n‚úÖ WhatWeb detect√≥ {len(result['technologies'])} tecnolog√≠as:")
            for tech in result['technologies']:
                version_info = f" v{tech['version']}" if tech.get('version') else ""
                print(f"   ‚Ä¢ {tech['name']}{version_info} (confianza: {tech['confidence']}%)")
        else:
            print("\n‚ùå WhatWeb no detect√≥ tecnolog√≠as")
            
    except Exception as e:
        print(f"\n‚ùå Error con WhatWeb: {e}")

if __name__ == "__main__":
    # Ejecutar demos
    demo_whatweb_detection()
    demo_whatweb_only()
    
    print("\n\nüéâ Funcionalidad WhatWeb implementada y funcionando correctamente!")
    print("\nüìù Caracter√≠sticas implementadas:")
    print("   ‚Ä¢ An√°lisis de patrones estilo WhatWeb")
    print("   ‚Ä¢ Detecci√≥n de servidores web (Apache, Nginx, IIS)")
    print("   ‚Ä¢ Detecci√≥n de tecnolog√≠as backend (PHP, ASP.NET)")
    print("   ‚Ä¢ Detecci√≥n de CMS (WordPress, Drupal, Joomla)")
    print("   ‚Ä¢ Detecci√≥n de frameworks frontend (React, Vue.js, Angular)")
    print("   ‚Ä¢ Detecci√≥n de librer√≠as (jQuery, Bootstrap)")
    print("   ‚Ä¢ Extracci√≥n de versiones cuando es posible")
    print("   ‚Ä¢ Integraci√≥n completa con el sistema de detecci√≥n existente")