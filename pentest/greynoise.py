import requests
import logging

log = logging.getLogger("pentest")

GREYNOISE_API_URL = "https://api.greynoise.io/v3/community/{ip}"

def check_greynoise(ip: str, api_key: str) -> dict:
    """Consulta la API de GreyNoise para una IP dada."""
    if not api_key:
        log.warning("GREYNOISE_API_KEY no configurada. Saltando la comprobaciÃ³n de GreyNoise.")
        return {}

    headers = {"key": api_key}
    try:
        response = requests.get(GREYNOISE_API_URL.format(ip=ip), headers=headers)
        if response.status_code == 404:
            return {"ip": ip, "noise": False, "riot": False, "message": "IP not found"}
        response.raise_for_status()  # Raise an HTTPError for bad responses (4xx or 5xx)
        return response.json()
    except requests.exceptions.RequestException as e:
        log.error(f"Error al consultar GreyNoise para {ip}: {e}")
        return {}

def is_ip_malicious_greynoise(ip: str, api_key: str) -> bool:
    """Verifica si una IP es clasificada como maliciosa por GreyNoise."""
    gn_data = check_greynoise(ip, api_key)
    if gn_data and gn_data.get("classification") == "malicious":
        log.warning(f"ðŸš¨ Â¡Alerta! La IP {ip} es clasificada como MALICIOSA por GreyNoise.")
        return True
    return False