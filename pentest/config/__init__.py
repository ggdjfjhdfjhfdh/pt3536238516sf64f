#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Paquete de configuración para el sistema de pentesting.
Contiene configuraciones para ML, detección mejorada y otros componentes.
"""

# Importaciones principales del paquete
try:
    from .ml_config import ML_CONFIG
except ImportError:
    ML_CONFIG = None

# Importar configuraciones principales desde el módulo config.py del directorio padre
try:
    from ..config import (
        REDIS_URL, SAFE_DOMAIN, DEFAULT_TIMEOUT, HTTP_REQUEST_TIMEOUT,
        HIBP_REQUEST_TIMEOUT, AMASS_TIMEOUT, WAF_EVASION_CONFIG,
        WAF_USER_AGENTS, WAF_COMMON_HEADERS, TEMPLATES_DIR, USER_AGENT,
        MAIL_SENDER_EMAIL, MAIL_SENDER_NAME, get_common_emails
    )
except ImportError:
    # Valores por defecto si no se pueden importar
    import os
    import re
    from pathlib import Path
    
    REDIS_URL = os.getenv("REDIS_URL", "redis://localhost:6379")
    SAFE_DOMAIN = re.compile(r"^[a-z0-9.-]{3,253}$", re.I)
    DEFAULT_TIMEOUT = 300
    HTTP_REQUEST_TIMEOUT = 10
    HIBP_REQUEST_TIMEOUT = 10
    AMASS_TIMEOUT = 600
    WAF_EVASION_CONFIG = {}
    WAF_USER_AGENTS = []
    WAF_COMMON_HEADERS = {}
    TEMPLATES_DIR = Path(".")
    USER_AGENT = "PentestExpress/2.0"
    MAIL_SENDER_EMAIL = "informes@auditatetumismo.es"
    MAIL_SENDER_NAME = "Pentest Express"
    
    def get_common_emails(domain: str) -> list[str]:
        return [f"info@{domain}", f"contact@{domain}", f"admin@{domain}"]

__all__ = [
    'ML_CONFIG', 'REDIS_URL', 'SAFE_DOMAIN', 'DEFAULT_TIMEOUT',
    'HTTP_REQUEST_TIMEOUT', 'HIBP_REQUEST_TIMEOUT', 'AMASS_TIMEOUT',
    'WAF_EVASION_CONFIG', 'WAF_USER_AGENTS', 'WAF_COMMON_HEADERS',
    'TEMPLATES_DIR', 'USER_AGENT', 'MAIL_SENDER_EMAIL', 'MAIL_SENDER_NAME',
    'get_common_emails'
]