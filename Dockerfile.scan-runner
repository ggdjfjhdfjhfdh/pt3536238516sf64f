FROM python:3.9-slim-bookworm

# Instalar dependencias del sistema, Go y herramientas
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    build-essential \
    libssl-dev \
    libssl3 \
    jq \
    dnsutils \
    nmap \
    openssl \
    unzip \
    # Dependencias para WeasyPrint
    libglib2.0-0 \
    libpango-1.0-0 \
    libpangoft2-1.0-0 \
    libharfbuzz0b \
    wkhtmltopdf \
    && ln -s /usr/bin/wkhtmltopdf /usr/local/bin/wkhtmltopdf \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && curl -sL https://golang.org/dl/go1.21.0.linux-amd64.tar.gz | tar -C /usr/local -xzf - \
    && echo 'export PATH=$PATH:/usr/local/go/bin:/root/go/bin' >> /root/.bashrc
ENV PATH="$PATH:/usr/local/go/bin:/root/go/bin"

# Verificar la instalación de wkhtmltopdf
RUN ls -la /usr/bin/wkhtmltopdf || echo "/usr/bin/wkhtmltopdf not found"
RUN ls -la /usr/local/bin/wkhtmltopdf || echo "/usr/local/bin/wkhtmltopdf not found"
RUN wkhtmltopdf --version || echo "wkhtmltopdf command not found"

RUN go clean -modcache
RUN go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
RUN go install -v github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest

# Verificar que las herramientas estén instaladas correctamente
RUN echo "Verificando herramientas instaladas:" \
    && which subfinder && subfinder -version \
    && which nuclei && nuclei -version \
    && curl --version \
    && echo "Todas las herramientas verificadas correctamente"


RUN apt-get update && apt-get install -y bsdextrautils && apt-get clean && rm -rf /var/lib/apt/lists/* # Cache invalidation

# Set working directory
WORKDIR /app

# Configurar PYTHONPATH para que Python pueda encontrar el paquete pentest
ENV PYTHONPATH=/app:$PYTHONPATH

# Copiar archivos de configuración y dependencias primero
COPY requirements.txt .
COPY setup.py .
COPY fix-dependencies.py .

# Copiar el código fuente
COPY pentest pentest
COPY services services

# Instalar dependencias con resolución de conflictos
RUN pip install --upgrade pip setuptools && \
    pip install --no-cache-dir 'anyio>=3.7.1,<5.0.0' && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir --upgrade 'fastapi>=0.115.0,<1.0.0' 'uvicorn[standard]>=0.32.0,<1.0.0' 'stripe>=10.0.0,<11.0.0' && \
    python fix-dependencies.py && \
    pip install --no-cache-dir --force-reinstall .



# Crear directorios necesarios
RUN mkdir -p /app/templates /app/pentest/templates /tmp/scan_results

# Copiar plantillas HTML
COPY templates/ /app/templates/
COPY templates/report.html /app/pentest/templates/report.html

# Comando para ejecutar el worker
CMD ["pentest-worker"]